
# vim: ft=make noexpandtab

ifneq ($(CALLER),MASTER)
   include Makefile.inc
endif

ifeq ("$(RESOURCE)","FILE")
$(error nds target not compatible with RESOURCE=FILE)
endif

# 1. Directories

OBJDIR_NDS := $(OBJDIR)/nds
DEPDIR_NDS := $(DEPDIR)/nds
GENDIR_NDS := $(GENDIR)/nds

DEVKITPATH := $(shell echo "$(DEVKITPRO)" | sed -e 's/^\([a-zA-Z]\):/\/\1/')

# 2. Files

BIN_NDS := $(BINDIR)/$(DSEKAI).nds

DSEKAI_C_FILES_NDS_ONLY := \
   src/main.c \
   unilayer/src/animate.c \
   unilayer/src/input/ndsi.c \
   unilayer/src/graphics/ndsg.c \
   unilayer/src/memory/fakem.c \
   unilayer/src/save/file.c \
   unilayer/src/resource/ndsr.c

DSEKAI_ASSETS_MAPS_NDS := \
   $(subst .json,.h,$(subst $(ASSETDIR)/,$(GENDIR_NDS)/,$(DSEKAI_ASSETS_MAPS_JSON)))

DSEKAI_O_FILES_NDS := \
   $(addprefix $(OBJDIR_NDS)/,$(subst .c,.o,$(DSEKAI_C_FILES))) \
   $(addprefix $(OBJDIR_NDS)/,$(subst .c,.o,$(DSEKAI_C_FILES_NDS_ONLY)))

DSEKAI_BITMAP_HS_NDS := \
   $(addprefix $(GENDIR_NDS)/,$(subst .bmp,.h,$(DSEKAI_ASSETS_BITMAPS)))

DSEKAI_BITMAP_SS_NDS := \
   $(addprefix $(GENDIR_NDS)/,$(subst .bmp,.s,$(DSEKAI_ASSETS_BITMAPS)))

DSEKAI_BITMAP_OS_NDS := \
   $(addprefix $(OBJDIR_NDS)/,$(subst .bmp,.o,$(DSEKAI_ASSETS_BITMAPS)))

RESEXT_H_NDS := $(GENDIR_NDS)/resext.h

# 3. Programs

CC_NDS := arm-none-eabi-gcc
LD_NDS := arm-none-eabi-gcc
NDSTOOL := ndstool
GRIT := grit

# 4. Arguments

#ARCH_NDS := -mthumb -mthumb-interwork
ARCH_NDS := -mlittle-endian

DEFINES_NDS := \
   $(DEFINES_DSEKAI) \
   $(DEFINES_DEPTH) \
   -DNO_ENGINE_POV \
   -DPLATFORM_NDS \
   -DUSE_SOFTWARE_TEXT \
   -DUSE_SOFTWARE_LINES \
   -DARM9 \
   -DSCREEN_W=256 \
   -DSCREEN_H=192

INCLUDES_NDS := \
   $(INCLUDES_UNILAYER) \
   -I $(GENDIR_NDS) \
   -I $(DEVKITPRO)/devkitARM/arm-none-eabi/include \
   -I $(DEVKITPRO)/devkitARM/include \
   -I $(DEVKITPRO)/libnds/include

CFLAGS_NDS := --sysroot $(DEVKITARM)/arm-none-eabi -march=armv5te -mtune=arm946e-s -fomit-frame-pointer -ffast-math $(ARCH_NDS) $(INCLUDES_NDS) $(DEFINES_NDS)

# The DS uses 8x8 tiles, so use -Mx2 to create 2*8=16px h/w metatiles.
GRIT_FLAGS := -gB8 -Mh2 -Mw2 -gTff55ff

ifneq ($(BUILD),RELEASE)
   CFLAGS_NDS += -DLOG_TO_FILE
endif

LIBS_NDS := -L$(DEVKITPRO)/libnds/lib -lnds9

LDFLAGS_NDS := -specs=ds_arm9.specs $(ARCH_NDS) -Wl,-Map,$(OBJDIR_NDS)/$(DSEKAI).map

$(BIN_NDS): PATH := $(DEVKITPATH)/tools/bin:$(DEVKITPATH)/devkitARM/bin:$(PATH)

# 5. Targets

platform := nds
platform_upper := NDS
#res_gfx := $(DSEKAI_ASSETS_BITMAPS)
#$(eval $(RESEXT_H_RULE))

pkg_bin := $(BIN_NDS)
pkg_strip := echo
pkg_name := $(DSEKAI)-$(platform)-$(GIT_HASH)
pkg_reqs :=
$(eval $(PKG_RULE))

# These are appended to the variables in resext.h. These have commas, so they
# can't be included directly in the args to subst.
#COMMANEWLINE_NDS := ",\n"
#TILESUFFIX_NDS := "Tiles,\n"
#PALSUFFIX_NDS := "Pal,\n"

$(GENDIR_NDS)/resemb.h: $(DSEKAI_ASSETS_MAPS_JSON) | \
$(GENDIR_NDS)/$(STAMPFILE) $(HEADPACK)
	$(HEADPACK) $@ $^

# TODO: Replace 16x16x16 with depth specifier variable.
# TODO: Include the tile/palette lengths.
# TODO: Move the struct def out of this generated header.
$(RESEXT_H_NDS): $(DSEKAI_BITMAP_HS_NDS) | $(GENDIR_NDS)/resemb.h
	$(MD) $(dir $@)
	echo "#ifndef RESEXT_H\n#define RESEXT_H\n\n" > $@
	echo "" >> $@
	echo "#ifdef RESOURCE_C\n" >> $@
	## Include all the bitmap headers.
	echo "$(addprefix #include \",$(addsuffix \"\n,$(subst $(GENDIR_NDS)/,,$^)))" >> $@
	echo "" >> $@
	## Create an index of bitmap tiles.
	#echo "const unsigned int* gc_resext_bitmap_tiles[] = {" >> $@
	#echo "$(subst $(GENDIR_NDS)/$(ASSETDIR)/16x16x16/,,$(subst .h,"$(TILESUFFIX_NDS)",$^))" >> $@
	#echo "};" >> $@
	#echo "" >> $@
	## Create an index of bitmap palettes.
	#echo "const unsigned short* gc_resext_bitmap_palettes[] = {" >> $@
	#echo "$(subst $(GENDIR_NDS)/$(ASSETDIR)/16x16x16/,,$(subst .h,"$(PALSUFFIX_NDS)",$^))" >> $@
	#echo "};" >> $@
	#echo "" >> $@
	## Create a searchable list of tile name strings.
	#echo "const char* gc_resext_bitmap_names[] = {" >> $@
	#echo "$(subst $(GENDIR_NDS)/$(ASSETDIR)/16x16x16/,\",$(subst .h,"\"$(COMMANEWLINE_NDS)",$^))" >> $@
	#echo "};" >> $@
	#echo "" >> $@
	echo "" >> $@
	for f in $(subst $(GENDIR_NDS)/$(ASSETDIR)/16x16x16/,,$(subst .h,,$^)); do \
		echo "struct RESOURCE_GRIT_DEF struct_$$f =\n" \
			"   { $${f}Tiles," \
			"$${f}Pal," \
			"`grep "$${f}TilesLen" \
				"$(GENDIR_NDS)/$(ASSETDIR)/16x16x16/$${f}.h" | \
				awk '{print $$3}'`," \
			"`grep "$${f}PalLen" \
				"$(GENDIR_NDS)/$(ASSETDIR)/16x16x16/$${f}.h" | \
				awk '{print $$3}'` };" >> $@ ; \
	done
	echo "" >> $@
	echo "#else" >> $@
	# Add extern defs for outside of resource.c (or ndsr.c).
	#echo "extern const unsigned int* gc_resext_bitmap_tiles[];" >> $@
	#echo "extern const unsigned short* gc_resext_bitmap_palettes[];" >> $@
	#echo "extern const char* gc_resext_bitmap_names[];" >> $@
	for f in $(subst $(GENDIR_NDS)/$(ASSETDIR)/16x16x16/,,$(subst .h,,$^)); do \
		echo "extern struct RESOURCE_GRIT_DEF struct_$$f;" >> $@ ; \
	done
	echo "#endif /* RESOURCE_C */\n" >> $@
	echo "" >> $@
	# Define pointers to structs to call from static maps, etc for all files.
	for f in $(subst $(GENDIR_NDS)/$(ASSETDIR)/16x16x16/,,$(subst .h,,$^)); do \
		echo "#define $$f (&struct_$$f)" >> $@ ; \
	done
	echo "" >> $@
	echo "#include \"resemb.h\"" >> $@
	echo "" >> $@
	# Terminate the include file.
	echo "#endif /* RESEXT_H */" >> $@

$(GENDIR_NDS)/$(ASSETDIR)/%.h $(GENDIR_NDS)/$(ASSETDIR)/%.s: $(ASSETDIR)/%.bmp
	$(MD) $(dir $@)
	$(GRIT) $< $(GRIT_FLAGS) -fts -o $@

$(BIN_NDS): $(OBJDIR_NDS)/$(DSEKAI).elf $(GENDIR_NDS)/$(DSEKAI)-1.bmp
	$(NDSTOOL) -c $@ -9 $< -b $(GENDIR_NDS)/$(DSEKAI)-1.bmp "$(DSEKAI);$(DSEKAI);$(DSEKAI)"

$(GENDIR_NDS)/$(DSEKAI)-1.bmp: $(ASSETDIR)/$(DSEKAI).ico
	$(IMAGEMAGICK) $< -compress none -type palette -colors 16 $(GENDIR_NDS)/$(DSEKAI).bmp

$(OBJDIR_NDS)/$(DSEKAI).elf: $(DSEKAI_O_FILES_NDS) $(DSEKAI_BITMAP_OS_NDS)
	$(LD_NDS) $(LDFLAGS_NDS) $^ $(LIBS_NDS) -o $@

$(OBJDIR_NDS)/$(ASSETDIR)/%.o: $(GENDIR_NDS)/$(ASSETDIR)/%.s
	$(MD) $(dir $@)
	$(CC_NDS) $(CFLAGS_NDS) -c -o $@ $<

$(OBJDIR_NDS)/%.o: %.c $(RESEXT_H_NDS) | $(BINDIR)/$(STAMPFILE)
	$(MD) $(dir $@)
	$(CC_NDS) $(CFLAGS_NDS) -c -o $@ $(<:%.o=%)

#$(DEPDIR_NDS)/%.d: %.c $(GENDIR_NDS)/resext.h $(DSEKAI_ASSETS_MAPS_NDS)
#	$(MD) $(dir $@)
#	$(CC_NDS) $(CFLAGS_NDS) -MM $< \
#      -MT $(subst .c,.o,$(addprefix $(DEPDIR_NDS)/,$<)) -MF $@ || touch $@

#include $(subst $(OBJDIR)/,$(DEPDIR)/,$(DSEKAI_O_FILES_NDS:.o=.d))


